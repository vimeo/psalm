<?xml version="1.0" encoding="UTF-8"?>
<files psalm-version="dev-master@53e3889745852409b704e0035d93e0819d522912">
  <file src="examples/TemplateChecker.php">
    <PossiblyUndefinedIntArrayOffset occurrences="2">
      <code>$comment_block-&gt;tags['variablesfrom'][0]</code>
      <code>$matches[1]</code>
    </PossiblyUndefinedIntArrayOffset>
  </file>
  <file src="examples/TemplateScanner.php">
    <PossiblyUndefinedIntArrayOffset occurrences="2">
      <code>$comment_block-&gt;tags['variablesfrom'][0]</code>
      <code>$matches[1]</code>
    </PossiblyUndefinedIntArrayOffset>
  </file>
  <file src="src/Psalm/Codebase.php">
    <PossiblyUndefinedIntArrayOffset occurrences="2">
      <code>$matches[0]</code>
      <code>$symbol_parts[1]</code>
    </PossiblyUndefinedIntArrayOffset>
  </file>
  <file src="src/Psalm/Config/FileFilter.php">
    <PossiblyUndefinedIntArrayOffset occurrences="1">
      <code>explode('::', $method_id)[1]</code>
    </PossiblyUndefinedIntArrayOffset>
  </file>
  <file src="src/Psalm/ErrorBaseline.php">
    <PossiblyUndefinedIntArrayOffset occurrences="3">
      <code>$matches[1]</code>
      <code>$matches[2]</code>
      <code>$matches[3]</code>
    </PossiblyUndefinedIntArrayOffset>
  </file>
  <file src="src/Psalm/Internal/Analyzer/ClassAnalyzer.php">
    <PossiblyUndefinedIntArrayOffset occurrences="3">
      <code>$comments[0]</code>
      <code>$stmt-&gt;props[0]</code>
      <code>$uninitialized_variables[0]</code>
    </PossiblyUndefinedIntArrayOffset>
  </file>
  <file src="src/Psalm/Internal/Analyzer/ProjectAnalyzer.php">
    <PossiblyUndefinedIntArrayOffset occurrences="4">
      <code>$destination_parts[1]</code>
      <code>$destination_parts[1]</code>
      <code>$destination_parts[1]</code>
      <code>$source_parts[1]</code>
    </PossiblyUndefinedIntArrayOffset>
  </file>
  <file src="src/Psalm/Internal/Analyzer/Statements/Block/ForeachAnalyzer.php">
    <PossiblyUndefinedIntArrayOffset occurrences="1">
      <code>$iterator_atomic_type-&gt;type_params[1]</code>
    </PossiblyUndefinedIntArrayOffset>
  </file>
  <file src="src/Psalm/Internal/Analyzer/Statements/Block/LoopAnalyzer.php">
    <PossiblyUndefinedIntArrayOffset occurrences="1">
      <code>$pre_conditions[0]</code>
    </PossiblyUndefinedIntArrayOffset>
  </file>
  <file src="src/Psalm/Internal/Analyzer/Statements/Block/SwitchAnalyzer.php">
    <InvalidPropertyAssignmentValue occurrences="1">
      <code>$context-&gt;assigned_var_ids += $switch_scope-&gt;new_assigned_var_ids</code>
    </InvalidPropertyAssignmentValue>
  </file>
  <file src="src/Psalm/Internal/Analyzer/Statements/Block/SwitchCaseAnalyzer.php">
    <PossiblyUndefinedIntArrayOffset occurrences="3">
      <code>$new_case_equality_expr-&gt;getArgs()[1]</code>
      <code>$switch_scope-&gt;leftover_statements[0]</code>
      <code>$traverser-&gt;traverse([$switch_condition])[0]</code>
    </PossiblyUndefinedIntArrayOffset>
  </file>
  <file src="src/Psalm/Internal/Analyzer/Statements/Expression/AssertionFinder.php">
    <PossiblyUndefinedIntArrayOffset occurrences="28">
      <code>$assertion-&gt;rule[0]</code>
      <code>$assertion-&gt;rule[0]</code>
      <code>$assertion-&gt;rule[0]</code>
      <code>$assertion-&gt;rule[0]</code>
      <code>$assertion-&gt;rule[0]</code>
      <code>$assertion-&gt;rule[0]</code>
      <code>$assertion-&gt;rule[0]</code>
      <code>$count_expr-&gt;getArgs()[0]</code>
      <code>$count_expr-&gt;getArgs()[0]</code>
      <code>$count_expr-&gt;getArgs()[0]</code>
      <code>$count_expr-&gt;getArgs()[0]</code>
      <code>$count_expr-&gt;getArgs()[0]</code>
      <code>$counted_expr-&gt;getArgs()[0]</code>
      <code>$expr-&gt;getArgs()[0]</code>
      <code>$expr-&gt;getArgs()[0]</code>
      <code>$expr-&gt;getArgs()[0]</code>
      <code>$expr-&gt;getArgs()[0]</code>
      <code>$expr-&gt;getArgs()[0]</code>
      <code>$expr-&gt;getArgs()[0]</code>
      <code>$expr-&gt;getArgs()[0]</code>
      <code>$expr-&gt;getArgs()[0]</code>
      <code>$expr-&gt;getArgs()[1]</code>
      <code>$expr-&gt;getArgs()[1]</code>
      <code>$get_debug_type_expr-&gt;getArgs()[0]</code>
      <code>$get_debug_type_expr-&gt;getArgs()[0]</code>
      <code>$getclass_expr-&gt;getArgs()[0]</code>
      <code>$gettype_expr-&gt;getArgs()[0]</code>
      <code>$gettype_expr-&gt;getArgs()[0]</code>
    </PossiblyUndefinedIntArrayOffset>
  </file>
  <file src="src/Psalm/Internal/Analyzer/Statements/Expression/BinaryOp/ArithmeticOpAnalyzer.php">
    <PossiblyUndefinedIntArrayOffset occurrences="2">
      <code>$invalid_left_messages[0]</code>
      <code>$invalid_right_messages[0]</code>
    </PossiblyUndefinedIntArrayOffset>
  </file>
  <file src="src/Psalm/Internal/Analyzer/Statements/Expression/Call/ArgumentAnalyzer.php">
    <ComplexMethod occurrences="1">
      <code>verifyType</code>
    </ComplexMethod>
    <PossiblyUndefinedIntArrayOffset occurrences="3">
      <code>$non_existent_method_ids[0]</code>
      <code>$parts[1]</code>
      <code>explode('::', $cased_method_id)[1]</code>
    </PossiblyUndefinedIntArrayOffset>
  </file>
  <file src="src/Psalm/Internal/Analyzer/Statements/Expression/Call/ArgumentsAnalyzer.php">
    <PossiblyUndefinedIntArrayOffset occurrences="1">
      <code>$arg_function_params[$argument_offset][0]</code>
    </PossiblyUndefinedIntArrayOffset>
  </file>
  <file src="src/Psalm/Internal/Analyzer/Statements/Expression/Call/ArrayFunctionArgumentsAnalyzer.php">
    <PossiblyUndefinedIntArrayOffset occurrences="4">
      <code>$args[0]</code>
      <code>$args[0]</code>
      <code>$args[1]</code>
      <code>$callmap_callables[0]</code>
    </PossiblyUndefinedIntArrayOffset>
  </file>
  <file src="src/Psalm/Internal/Analyzer/Statements/Expression/Call/FunctionCallAnalyzer.php">
    <PossiblyUndefinedIntArrayOffset occurrences="2">
      <code>$parts[1]</code>
      <code>$stmt-&gt;getArgs()[0]</code>
    </PossiblyUndefinedIntArrayOffset>
  </file>
  <file src="src/Psalm/Internal/Analyzer/Statements/Expression/Call/MethodCallAnalyzer.php">
    <PossiblyUndefinedIntArrayOffset occurrences="6">
      <code>$result-&gt;invalid_method_call_types[0]</code>
      <code>$result-&gt;non_existent_class_method_ids[0]</code>
      <code>$result-&gt;non_existent_class_method_ids[0]</code>
      <code>$result-&gt;non_existent_interface_method_ids[0]</code>
      <code>$result-&gt;non_existent_interface_method_ids[0]</code>
      <code>$result-&gt;non_existent_magic_method_ids[0]</code>
    </PossiblyUndefinedIntArrayOffset>
  </file>
  <file src="src/Psalm/Internal/Analyzer/Statements/Expression/CallAnalyzer.php">
    <PossiblyUndefinedIntArrayOffset occurrences="2">
      <code>$callable_arg-&gt;items[0]</code>
      <code>$callable_arg-&gt;items[1]</code>
    </PossiblyUndefinedIntArrayOffset>
  </file>
  <file src="src/Psalm/Internal/Analyzer/Statements/Expression/Fetch/InstancePropertyFetchAnalyzer.php">
    <PossiblyUndefinedIntArrayOffset occurrences="1">
      <code>$invalid_fetch_types[0]</code>
    </PossiblyUndefinedIntArrayOffset>
  </file>
  <file src="src/Psalm/Internal/Analyzer/Statements/Expression/YieldAnalyzer.php">
    <PossiblyUndefinedIntArrayOffset occurrences="1">
      <code>$atomic_return_type-&gt;type_params[2]</code>
    </PossiblyUndefinedIntArrayOffset>
  </file>
  <file src="src/Psalm/Internal/Analyzer/Statements/UnusedAssignmentRemover.php">
    <PossiblyUndefinedIntArrayOffset occurrences="6">
      <code>$token_list[$iter]</code>
      <code>$token_list[$iter]</code>
      <code>$token_list[$iter]</code>
      <code>$token_list[$iter]</code>
      <code>$token_list[0]</code>
      <code>$token_list[1]</code>
    </PossiblyUndefinedIntArrayOffset>
  </file>
  <file src="src/Psalm/Internal/Analyzer/StatementsAnalyzer.php">
    <PossiblyUndefinedIntArrayOffset occurrences="1">
      <code>$stmt-&gt;expr-&gt;getArgs()[0]</code>
    </PossiblyUndefinedIntArrayOffset>
  </file>
  <file src="src/Psalm/Internal/Codebase/InternalCallMapHandler.php">
    <PossiblyUndefinedIntArrayOffset occurrences="2">
      <code>$callables[0]</code>
      <code>$callables[0]</code>
    </PossiblyUndefinedIntArrayOffset>
  </file>
  <file src="src/Psalm/Internal/Codebase/Methods.php">
    <PossiblyUndefinedIntArrayOffset occurrences="1">
      <code>$function_callables[0]</code>
    </PossiblyUndefinedIntArrayOffset>
  </file>
  <file src="src/Psalm/Internal/Diff/ClassStatementsDiffer.php">
    <PossiblyUndefinedIntArrayOffset occurrences="6">
      <code>$a-&gt;props[0]</code>
      <code>$a-&gt;stmts[0]</code>
      <code>$a_stmt_comments[0]</code>
      <code>$b-&gt;props[0]</code>
      <code>$b-&gt;stmts[0]</code>
      <code>$b_stmt_comments[0]</code>
    </PossiblyUndefinedIntArrayOffset>
  </file>
  <file src="src/Psalm/Internal/FileManipulation/PropertyDocblockManipulator.php">
    <PossiblyUndefinedIntArrayOffset occurrences="1">
      <code>$stmt-&gt;props[0]</code>
    </PossiblyUndefinedIntArrayOffset>
  </file>
  <file src="src/Psalm/Internal/LanguageServer/LanguageClient.php">
    <DocblockTypeContradiction occurrences="3">
      <code>$type &lt; 1</code>
      <code>$type &lt; 1 || $type &gt; 4</code>
      <code>$type &gt; 4</code>
    </DocblockTypeContradiction>
  </file>
  <file src="src/Psalm/Internal/LanguageServer/Message.php">
    <PossiblyUndefinedIntArrayOffset occurrences="1">
      <code>$pair[1]</code>
    </PossiblyUndefinedIntArrayOffset>
  </file>
  <file src="src/Psalm/Internal/LanguageServer/ProtocolStreamReader.php">
    <PossiblyUndefinedIntArrayOffset occurrences="1">
      <code>$parts[1]</code>
    </PossiblyUndefinedIntArrayOffset>
  </file>
  <file src="src/Psalm/Internal/LanguageServer/Server/TextDocument.php">
    <PossiblyUndefinedIntArrayOffset occurrences="1">
      <code>$contentChanges[0]</code>
    </PossiblyUndefinedIntArrayOffset>
  </file>
  <file src="src/Psalm/Internal/MethodIdentifier.php">
    <PossiblyUndefinedIntArrayOffset occurrences="1">
      <code>$method_id_parts[1]</code>
    </PossiblyUndefinedIntArrayOffset>
  </file>
  <file src="src/Psalm/Internal/PhpVisitor/PartialParserVisitor.php">
    <PossiblyUndefinedIntArrayOffset occurrences="8">
      <code>$cs[0]</code>
      <code>$match[0]</code>
      <code>$match[1]</code>
      <code>$match[2]</code>
      <code>$node-&gt;stmts[0]</code>
      <code>$replacement_stmts[0]</code>
      <code>$replacement_stmts[0]</code>
      <code>$replacement_stmts[0]</code>
    </PossiblyUndefinedIntArrayOffset>
  </file>
  <file src="src/Psalm/Internal/PhpVisitor/Reflector/ClassLikeDocblockParser.php">
    <PossiblyUndefinedIntArrayOffset occurrences="4">
      <code>$doc_line_parts[1]</code>
      <code>$matches[0]</code>
      <code>$method_tree-&gt;children[0]</code>
      <code>$method_tree-&gt;children[1]</code>
    </PossiblyUndefinedIntArrayOffset>
  </file>
  <file src="src/Psalm/Internal/PhpVisitor/Reflector/ClassLikeNodeScanner.php">
    <PossiblyUndefinedIntArrayOffset occurrences="2">
      <code>$l[4]</code>
      <code>$r[4]</code>
    </PossiblyUndefinedIntArrayOffset>
  </file>
  <file src="src/Psalm/Internal/PhpVisitor/Reflector/ExpressionScanner.php">
    <PossiblyUndefinedIntArrayOffset occurrences="2">
      <code>$node-&gt;getArgs()[0]</code>
      <code>$node-&gt;getArgs()[1]</code>
    </PossiblyUndefinedIntArrayOffset>
  </file>
  <file src="src/Psalm/Internal/PhpVisitor/Reflector/FunctionLikeDocblockParser.php">
    <PossiblyUndefinedIntArrayOffset occurrences="2">
      <code>$line_parts[1]</code>
      <code>$since_parts[1]</code>
    </PossiblyUndefinedIntArrayOffset>
    <RedundantCondition occurrences="1">
      <code>count($line_parts) &gt; 0</code>
    </RedundantCondition>
  </file>
  <file src="src/Psalm/Internal/PhpVisitor/Reflector/FunctionLikeDocblockScanner.php">
    <PossiblyUndefinedIntArrayOffset occurrences="1">
      <code>$flow_parts[0]</code>
    </PossiblyUndefinedIntArrayOffset>
  </file>
  <file src="src/Psalm/Internal/PhpVisitor/Reflector/FunctionLikeNodeScanner.php">
    <PossiblyUndefinedIntArrayOffset occurrences="1">
      <code>$stmt-&gt;stmts[0]</code>
    </PossiblyUndefinedIntArrayOffset>
  </file>
  <file src="src/Psalm/Internal/PhpVisitor/SimpleNameResolver.php">
    <PossiblyUndefinedIntArrayOffset occurrences="1">
      <code>$cs[0]</code>
    </PossiblyUndefinedIntArrayOffset>
  </file>
  <file src="src/Psalm/Internal/Type/Comparator/CallableTypeComparator.php">
    <LessSpecificReturnStatement occurrences="1">
      <code>$callable</code>
    </LessSpecificReturnStatement>
    <MoreSpecificReturnType occurrences="1">
      <code>TCallable|TClosure|null</code>
    </MoreSpecificReturnType>
  </file>
  <file src="src/Psalm/Internal/Type/TemplateStandinTypeReplacer.php">
    <ImpureMethodCall occurrences="5">
      <code>get</code>
      <code>get</code>
      <code>get</code>
      <code>getClassTemplateTypes</code>
      <code>has</code>
    </ImpureMethodCall>
    <ImpurePropertyAssignment occurrences="1">
      <code>$candidate_param_type-&gt;from_template_default</code>
    </ImpurePropertyAssignment>
  </file>
  <file src="src/Psalm/Internal/Type/TypeCombiner.php">
    <PossiblyUndefinedIntArrayOffset occurrences="6">
      <code>$combination-&gt;array_type_params[1]</code>
      <code>$combination-&gt;array_type_params[1]</code>
      <code>$combination-&gt;array_type_params[1]</code>
      <code>$combination-&gt;array_type_params[1]</code>
      <code>$combination-&gt;array_type_params[1]</code>
      <code>$combination-&gt;array_type_params[1]</code>
    </PossiblyUndefinedIntArrayOffset>
  </file>
  <file src="src/Psalm/Internal/Type/TypeParser.php">
    <PossiblyUndefinedIntArrayOffset occurrences="8">
      <code>$intersection_types[0]</code>
      <code>$parse_tree-&gt;children[0]</code>
      <code>$parse_tree-&gt;condition-&gt;children[0]</code>
      <code>array_keys($offset_template_data)[0]</code>
      <code>array_keys($template_type_map[$array_param_name])[0]</code>
      <code>array_keys($template_type_map[$class_name])[0]</code>
      <code>array_keys($template_type_map[$fq_classlike_name])[0]</code>
      <code>array_keys($template_type_map[$template_param_name])[0]</code>
    </PossiblyUndefinedIntArrayOffset>
  </file>
  <file src="src/Psalm/Type/Atomic.php">
    <ImpureMethodCall occurrences="10">
      <code>classExtendsOrImplements</code>
      <code>classExtendsOrImplements</code>
      <code>classExtendsOrImplements</code>
      <code>classOrInterfaceExists</code>
      <code>classOrInterfaceExists</code>
      <code>classOrInterfaceExists</code>
      <code>getMappedGenericTypeParams</code>
      <code>interfaceExtends</code>
      <code>interfaceExtends</code>
      <code>interfaceExtends</code>
    </ImpureMethodCall>
    <PossiblyUndefinedIntArrayOffset occurrences="1">
      <code>array_keys($template_type_map[$value])[0]</code>
    </PossiblyUndefinedIntArrayOffset>
  </file>
  <file src="src/Psalm/Type/Atomic/CallableTrait.php">
    <ImpureMethodCall occurrences="4">
      <code>replace</code>
      <code>replace</code>
      <code>replace</code>
      <code>replace</code>
    </ImpureMethodCall>
  </file>
  <file src="src/Psalm/Type/Atomic/GenericTrait.php">
    <ImpureMethodCall occurrences="3">
      <code>getMappedGenericTypeParams</code>
      <code>replace</code>
      <code>replace</code>
    </ImpureMethodCall>
    <PossiblyUndefinedIntArrayOffset occurrences="1">
      <code>$this-&gt;type_params[1]</code>
    </PossiblyUndefinedIntArrayOffset>
  </file>
  <file src="src/Psalm/Type/Atomic/HasIntersectionTrait.php">
    <ImpureMethodCall occurrences="1">
      <code>getMostSpecificTypeFromBounds</code>
    </ImpureMethodCall>
  </file>
  <file src="src/Psalm/Type/Atomic/TClassString.php">
    <ImpureMethodCall occurrences="1">
      <code>replace</code>
    </ImpureMethodCall>
  </file>
  <file src="src/Psalm/Type/Atomic/TClassStringMap.php">
    <ImpureMethodCall occurrences="4">
      <code>getString</code>
      <code>getString</code>
      <code>replace</code>
      <code>replace</code>
    </ImpureMethodCall>
    <ImpurePropertyAssignment occurrences="1">
      <code>$cloned-&gt;value_param</code>
    </ImpurePropertyAssignment>
  </file>
  <file src="src/Psalm/Type/Atomic/TConditional.php">
    <ImpureMethodCall occurrences="1">
      <code>replace</code>
    </ImpureMethodCall>
  </file>
  <file src="src/Psalm/Type/Atomic/TKeyedArray.php">
    <ImpureMethodCall occurrences="10">
      <code>combine</code>
      <code>combine</code>
      <code>combineUnionTypes</code>
      <code>combineUnionTypes</code>
      <code>combineUnionTypes</code>
      <code>combineUnionTypes</code>
      <code>combineUnionTypes</code>
      <code>combineUnionTypes</code>
      <code>replace</code>
      <code>replace</code>
    </ImpureMethodCall>
    <ImpurePropertyAssignment occurrences="3">
      <code>$key_type-&gt;possibly_undefined</code>
      <code>$value_type-&gt;possibly_undefined</code>
      <code>$value_type-&gt;possibly_undefined</code>
    </ImpurePropertyAssignment>
  </file>
  <file src="src/Psalm/Type/Atomic/TList.php">
    <ImpureMethodCall occurrences="2">
      <code>replace</code>
      <code>replace</code>
    </ImpureMethodCall>
    <ImpurePropertyAssignment occurrences="1">
      <code>$cloned-&gt;type_param</code>
    </ImpurePropertyAssignment>
  </file>
  <file src="src/Psalm/Type/Atomic/TObjectWithProperties.php">
    <ImpureMethodCall occurrences="2">
      <code>replace</code>
      <code>replace</code>
    </ImpureMethodCall>
    <ImpurePropertyFetch occurrences="2">
      <code>$type-&gt;possibly_undefined</code>
      <code>$type-&gt;possibly_undefined</code>
    </ImpurePropertyFetch>
  </file>
  <file src="src/Psalm/Type/Atomic/TTemplateKeyOf.php">
    <ImpureMethodCall occurrences="1">
      <code>replace</code>
    </ImpureMethodCall>
  </file>
  <file src="src/Psalm/Type/Atomic/TTemplatePropertiesOf.php">
    <ImpureMethodCall occurrences="1">
      <code>replace</code>
    </ImpureMethodCall>
  </file>
  <file src="src/Psalm/Type/Atomic/TTemplateValueOf.php">
    <ImpureMethodCall occurrences="1">
      <code>replace</code>
    </ImpureMethodCall>
  </file>
  <file src="src/Psalm/Type/MutableUnion.php">
    <PossiblyUnusedProperty occurrences="7">
      <code>$allow_mutations</code>
      <code>$by_ref</code>
      <code>$failed_reconciliation</code>
      <code>$from_template_default</code>
      <code>$has_mutations</code>
      <code>$initialized_class</code>
      <code>$reference_free</code>
    </PossiblyUnusedProperty>
  </file>
  <file src="src/Psalm/Type/Reconciler.php">
    <PossiblyUndefinedIntArrayOffset occurrences="2">
      <code>$type[0]</code>
      <code>$type[0][0]</code>
    </PossiblyUndefinedIntArrayOffset>
  </file>
  <file src="src/Psalm/Type/Union.php">
    <PossiblyUnusedProperty occurrences="1">
      <code>$ignore_isset</code>
    </PossiblyUnusedProperty>
  </file>
  <file src="src/Psalm/Type/UnionTrait.php">
    <PossiblyUnusedMethod occurrences="2">
      <code>allFloatLiterals</code>
      <code>allFloatLiterals</code>
    </PossiblyUnusedMethod>
  </file>
  <file src="tests/Internal/Codebase/InternalCallMapHandlerTest.php">
    <UnusedPsalmSuppress occurrences="1">
      <code>UndefinedMethod</code>
    </UnusedPsalmSuppress>
  </file>
  <file src="vendor/nikic/php-parser/lib/PhpParser/Node/Expr/ArrowFunction.php">
    <PossiblyUndefinedStringArrayOffset occurrences="1">
      <code>$subNodes['expr']</code>
    </PossiblyUndefinedStringArrayOffset>
  </file>
</files>
